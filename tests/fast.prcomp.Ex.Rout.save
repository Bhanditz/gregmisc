
R : Copyright 2004, The R Foundation for Statistical Computing
Version 1.9.0 beta (2004-03-26), ISBN 3-900051-00-3

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for a HTML browser interface to help.
Type 'q()' to quit R.

> library(gregmisc)

Attaching package 'gregmisc':


	The following object(s) are masked from package:stats :

	 lowess 

> set.seed(1234)
> 
> 
>   # create test matrix
>   set.seed(4943546)
>   nr <- 50
>   nc <- 2000
>   x  <- matrix( rnorm( nr*nc), nrow=nr, ncol=nc )
>   tx <- t(x)
> 
>   # SVD directly on matrix is SLOW:
>   system.time( val.x <- svd(x)$u )
[1] 1.27 0.03 1.37 0.00 0.00
> 
>   # SVD on t(matrix) is FAST:
>   system.time( val.tx <- svd(tx)$v )
[1] 1.30 0.00 1.55 0.00 0.00
> 
>   # and the results are equivalent:
>   max( abs(val.x) - abs(val.tx) )
[1] 1.649514e-13
> 
>   # Time gap dissapears using fast.svd:
>   system.time( val.x <- fast.svd(x)$u )
[1] 1.23 0.01 1.27 0.00 0.00
>   system.time( val.tx <- fast.svd(tx)$v )
[1] 1.29 0.00 1.32 0.00 0.00
>   max( abs(val.x) - abs(val.tx) )
[1] 1.649514e-13
> 
> 
>   library(stats)
> 
>   # prcomp directly on matrix is SLOW:
>   system.time( pr.x <- prcomp(x) )
[1] 1.60 0.00 1.66 0.00 0.00
> 
>   # prcomp.fast is much faster
>   system.time( fast.pr.x <- fast.prcomp(x) )
[1] 1.97 0.02 2.01 0.00 0.00
> 
>   # and the results are equivalent
>   max( pr.x$sdev - fast.pr.x$sdev )
[1] 0
>   max( abs(pr.x$rotation[,1:49]) - abs(fast.pr.x$rotation[,1:49]) )
[1] 0
>   max( abs(pr.x$x) - abs(fast.pr.x$x)  )
[1] 0
> 
>   # (except for the last and least significant component):
>   max( abs(pr.x$rotation[,50]) - abs(fast.pr.x$rotation[,50]) )
[1] 0
> 
