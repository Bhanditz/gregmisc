
R : Copyright 2003, The R Development Core Team
Version 1.7.0  (2003-04-16)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type `license()' or `licence()' for distribution details.

R is a collaborative project with many contributors.
Type `contributors()' for more information.

Type `demo()' for some demos, `help()' for on-line help, or
`help.start()' for a HTML browser interface to help.
Type `q()' to quit R.

> library(gregmisc)
Loading required package: MASS 

Attaching package 'gregmisc':


	The following object(s) are masked from package:base :

	 lowess 

> 
> set.seed(4684)
> y <- rnorm(100)
> x.true <- rnorm(100, mean=y, sd=0.25)
> x <-  factor(cut(x.true,c(-4,-1.5,0,1.5,4)))
> reg <- lm(y ~ x)
> summary(reg)

Call:
lm(formula = y ~ x)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.24953 -0.32750  0.01022  0.39324  0.79245 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  -1.7287     0.1907  -9.066 1.51e-14 ***
x(-1.5,0]     1.1677     0.2027   5.760 1.01e-07 ***
x(0,1.5]      2.2522     0.2035  11.065  < 2e-16 ***
x(1.5,4]      3.5063     0.2828  12.397  < 2e-16 ***
---
Signif. codes:  0 `***' 0.001 `**' 0.01 `*' 0.05 `.' 0.1 ` ' 1 

Residual standard error: 0.4671 on 96 degrees of freedom
Multiple R-Squared: 0.7405,	Adjusted R-squared: 0.7324 
F-statistic: 91.31 on 3 and 96 DF,  p-value: < 2.2e-16 

> 
> # Mirror default treatment contrasts
> test <- make.contrasts(rbind( c(-1,1,0,0), c(-1,0,1,0), c(-1,0,0,1) ))
> lm( y ~ x, contrasts=list(x = test ))

Call:
lm(formula = y ~ x, contrasts = list(x = test))

Coefficients:
(Intercept)          xC1          xC2          xC3  
   0.002878     1.167728     2.252186     3.506275  

> 
> # Specify some more complicated contrasts
> #   - mean of 1st group vs mean of 4th group
> #   - mean of 1st and 2nd groups vs mean of 3rd and 4th groups
> #   - mean of 1st group vs mean of 2nd, 3rd and 4th groups
> cmat <- rbind( "1 vs 4"    =c(-1, 0, 0, 1),
+                "1+2 vs 3+4"=c(-1/2,-1/2, 1/2, 1/2),
+                "1 vs 2+3+4"=c(-3/3, 1/3, 1/3, 1/3))
> 
> summary(lm( y ~ x, contrasts=list(x=make.contrasts(cmat) )))

Call:
lm(formula = y ~ x, contrasts = list(x = make.contrasts(cmat)))

Residuals:
     Min       1Q   Median       3Q      Max 
-1.24953 -0.32750  0.01022  0.39324  0.79245 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 0.002878   0.074919   0.038     0.97    
x1 vs 4     3.506275   0.282824  12.397   <2e-16 ***
x1+2 vs 3+4 2.295366   0.149838  15.319   <2e-16 ***
x1 vs 2+3+4 2.308729   0.205663  11.226   <2e-16 ***
---
Signif. codes:  0 `***' 0.001 `**' 0.01 `*' 0.05 `.' 0.1 ` ' 1 

Residual standard error: 0.4671 on 96 degrees of freedom
Multiple R-Squared: 0.7405,	Adjusted R-squared: 0.7324 
F-statistic: 91.31 on 3 and 96 DF,  p-value: < 2.2e-16 

> # or
> contrasts(x) <- make.contrasts(cmat)
> summary(lm( y ~ x ) )

Call:
lm(formula = y ~ x)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.24953 -0.32750  0.01022  0.39324  0.79245 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept) 0.002878   0.074919   0.038     0.97    
x1 vs 4     3.506275   0.282824  12.397   <2e-16 ***
x1+2 vs 3+4 2.295366   0.149838  15.319   <2e-16 ***
x1 vs 2+3+4 2.308729   0.205663  11.226   <2e-16 ***
---
Signif. codes:  0 `***' 0.001 `**' 0.01 `*' 0.05 `.' 0.1 ` ' 1 

Residual standard error: 0.4671 on 96 degrees of freedom
Multiple R-Squared: 0.7405,	Adjusted R-squared: 0.7324 
F-statistic: 91.31 on 3 and 96 DF,  p-value: < 2.2e-16 

> 
> # or use contrasts.lm
> reg <- lm(y ~ x)
> fit.contrast( reg, "x", cmat )
            Estimate Std. Error  t value     Pr(>|t|)
x1 vs 4     3.506275  0.2828243 12.39736 1.218181e-21
x1+2 vs 3+4 2.295366  0.1498378 15.31901 1.585924e-27
x1 vs 2+3+4 2.308729  0.2056633 11.22577 3.562316e-19
> 
> # compare with values computed directly using group means
> gm <- sapply(split(y,x),mean)
> gm %*% t(cmat)
      
         1 vs 4 1+2 vs 3+4 1 vs 2+3+4
  [1,] 3.506275   2.295366   2.308729
> 
> 
> #
> # Example for Analysis of Variance
> #
> 
> set.seed(03215)
> Genotype <- sample(c("WT","KO"), 1000, replace=TRUE)
> Time <- factor(sample(1:3, 1000, replace=TRUE))
> data <- data.frame(y, Genotype, Time)
> y <- rnorm(1000)
> 
> data <- data.frame(y, Genotype, as.factor(Time))
> 
> # Compute Contrasts & obtain 95\% confidence intervals
> 
> model <- aov( y ~ Genotype + Time + Genotype:Time, data=data )
> 
> fit.contrast( model, "Genotype", rbind("KO vs WT"=c(-1,1) ), conf=0.95 )
                   Estimate Std. Error   t value Pr(>|t|)   lower CI  upper CI
GenotypeKO vs WT 0.01683876  0.1095764 0.1536714   0.8779 -0.1981888 0.2318664
> 
> fit.contrast( model, "Time",
+             rbind("1 vs 2"=c(-1,1,0),
+                   "2 vs 3"=c(0,-1,1)
+                   ),
+             conf=0.95 )
               Estimate Std. Error     t value  Pr(>|t|)   lower CI   upper CI
Time1 vs 2 -0.003321336  0.1150931 -0.02885782 0.9769838 -0.2291746 0.22253196
Time2 vs 3 -0.131231895  0.1152710 -1.13846378 0.2552012 -0.3574344 0.09497061
> 
> 
> cm.G <- rbind("KO vs WT"=c(-1,1) )
> cm.T <- rbind("1 vs 2"=c(-1,1,0),
+               "2 vs 3"=c(0,-1,1) )
> 
> # Compute contrasts and show SSQ decompositions
> 
> model <- model <- aov( y ~ Genotype + Time + Genotype:Time, data=data,
+                       contrasts=list(Genotype=make.contrasts(cm.G),
+                                      Time=make.contrasts(cm.T) )
+                       )
> 
> summary(model, split=list( Genotype=list( "KO vs WT"=1 ),
+                            Time = list( "1 vs 2" = 1,
+                                         "2 vs 3" = 2 ) ) )
                                  Df  Sum Sq Mean Sq F value Pr(>F)
Genotype                           1    1.17    1.17  1.1207 0.2900
  Genotype: KO vs WT               1    1.17    1.17  1.1207 0.2900
Time                               2    0.74    0.37  0.3526 0.7029
  Time: 1 vs 2                     1    0.18    0.18  0.1710 0.6793
  Time: 2 vs 3                     1    0.56    0.56  0.5342 0.4650
Genotype:Time                      2    1.15    0.58  0.5524 0.5758
  Genotype:Time: KO vs WT.1 vs 2   1    0.33    0.33  0.3131 0.5759
  Genotype:Time: KO vs WT.2 vs 3   1    0.83    0.83  0.7916 0.3738
Residuals                        994 1036.64    1.04               
> 
> 
> 
