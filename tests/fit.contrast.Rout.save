
R : Copyright 2003, The R Development Core Team
Version 1.7.0  (2003-04-16)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type `license()' or `licence()' for distribution details.

R is a collaborative project with many contributors.
Type `contributors()' for more information.

Type `demo()' for some demos, `help()' for on-line help, or
`help.start()' for a HTML browser interface to help.
Type `q()' to quit R.

> library(gregmisc)
Loading required package: MASS 

Attaching package 'gregmisc':


	The following object(s) are masked from package:base :

	 lowess 

> 
> set.seed(1234567,"default")
> y <- rnorm(100)
> x <-  cut(rnorm(100, mean=y, sd=0.25),c(-4,-1.5,0,1.5,4))
> reg <- lm(y ~ x)
> summary(reg)

Call:
lm(formula = y ~ x)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.08402 -0.31026  0.02173  0.30216  1.43750 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  -1.8653     0.1671 -11.166  < 2e-16 ***
x(-1.5,0]     1.3012     0.1813   7.177  1.5e-10 ***
x(0,1.5]      2.4424     0.1823  13.399  < 2e-16 ***
x(1.5,4]      3.5380     0.2694  13.134  < 2e-16 ***
---
Signif. codes:  0 `***' 0.001 `**' 0.01 `*' 0.05 `.' 0.1 ` ' 1 

Residual standard error: 0.4725 on 96 degrees of freedom
Multiple R-Squared: 0.7644,	Adjusted R-squared: 0.757 
F-statistic: 103.8 on 3 and 96 DF,  p-value: < 2.2e-16 

> 
> # look at the group means
> gm <- sapply(split(y,x),mean)
> gm
 (-4,-1.5]   (-1.5,0]    (0,1.5]    (1.5,4] 
-1.8653458 -0.5641708  0.5770224  1.6726344 
> 
> 
> # mean of 1st group vs mean of 4th group
> fit.contrast(reg, x, c(    1,    0,    0,   -1) )
                 Estimate Std. Error   t value     Pr(>|t|)
x c=( 1 0 0 -1 ) -3.53798  0.2693713 -13.13421 3.651111e-23
> # estimate should be equal to:
> gm[1] - gm[4]
(-4,-1.5] 
 -3.53798 
> 
> # mean of 1st and 2nd groups vs mean of 3rd and 4th groups
> fit.contrast(reg, x, c( -1/2, -1/2,  1/2,  1/2) )
                          Estimate Std. Error  t value     Pr(>|t|)
x c=( -0.5 -0.5 0.5 0.5 ) 2.339587  0.1439081 16.25751 2.535832e-29
> # estimate should be equal to:
> sum(-1/2*gm[1], -1/2*gm[2], 1/2*gm[3], 1/2*gm[4])
[1] 2.339587
> 
> # mean of 1st group vs mean of 2nd, 3rd and 4th groups
> fit.contrast(reg, x, c( -3/3,  1/3,  1/3,  1/3) ) 
                                                                 Estimate
x c=( -1 0.333333333333333 0.333333333333333 0.333333333333333 ) 2.427174
                                                                 Std. Error
x c=( -1 0.333333333333333 0.333333333333333 0.333333333333333 )  0.1844218
                                                                  t value
x c=( -1 0.333333333333333 0.333333333333333 0.333333333333333 ) 13.16100
                                                                     Pr(>|t|)
x c=( -1 0.333333333333333 0.333333333333333 0.333333333333333 ) 3.217426e-23
> # estimate should be equal to:
> sum(-3/3*gm[1], 1/3*gm[2], 1/3*gm[3], 1/3*gm[4])
[1] 2.427174
> 
> # all at once
> cmat <- rbind( "1 vs 4"    =c(-1, 0, 0, 1),
+                "1+2 vs 3+4"=c(-1/2,-1/2, 1/2, 1/2),
+                "1 vs 2+3+4"=c(-3/3, 1/3, 1/3, 1/3))
> fit.contrast(reg,x,cmat)
            Estimate Std. Error  t value     Pr(>|t|)
x1 vs 4     3.537980  0.2693713 13.13421 3.651111e-23
x1+2 vs 3+4 2.339587  0.1439081 16.25751 2.535832e-29
x1 vs 2+3+4 2.427174  0.1844218 13.16100 3.217426e-23
> 
> #
> x2 <- rnorm(100,mean=y,sd=0.5)
> reg2 <- lm(y ~ x + x2 )
> fit.contrast(reg2,x,c(-1,0,0,1))
                 Estimate Std. Error  t value     Pr(>|t|)
x c=( -1 0 0 1 ) 2.019772  0.2832633 7.130368 1.950687e-10
> fit.contrast(reg2,x,c(-1,0,0,1), showall=T)
                    Estimate Std. Error    t value     Pr(>|t|)
(Intercept)      -0.04459262 0.05599663 -0.7963446 4.278173e-01
x c=( -1 0 0 1 )  2.01977181 0.28326335  7.1303676 1.950687e-10
x C2              0.42832431 0.08605623  4.9772612 2.871867e-06
x C3              0.18370763 0.10078643  1.8227418 7.148804e-02
x2                0.40042291 0.05024535  7.9693523 3.492886e-12
> fit.contrast(reg2,x,c(-1,0,0,1), showall=T, conf.int=0.95)
                    Estimate Std. Error    t value     Pr(>|t|)    lower CI
(Intercept)      -0.04459262 0.05599663 -0.7963446 4.278173e-01 -0.15575998
x c=( -1 0 0 1 )  2.01977181 0.28326335  7.1303676 1.950687e-10  1.45742296
x C2              0.42832431 0.08605623  4.9772612 2.871867e-06  0.25748110
x C3              0.18370763 0.10078643  1.8227418 7.148804e-02 -0.01637872
x2                0.40042291 0.05024535  7.9693523 3.492886e-12  0.30067327
                   upper CI
(Intercept)      0.06657475
x c=( -1 0 0 1 ) 2.58212066
x C2             0.59916752
x C3             0.38379399
x2               0.50017254
> fit.contrast(reg2,x,c(-1,0,0,1), showall=F, conf.int=0.95)
                 Estimate Std. Error  t value     Pr(>|t|) lower CI upper CI
x c=( -1 0 0 1 ) 2.019772  0.2832633 7.130368 1.950687e-10 1.457423 2.582121
> 
> # will work in the next version of nlme
> library(nlme)
Loading required package: lattice 
Loading required package: grid 
> data(Orthodont)
> fm1 <- lme(distance ~ Sex, data = Orthodont,random=~1|Subject) 
> intervals(fm1)
Approximate 95% confidence intervals

 Fixed effects:
                lower      est.      upper
(Intercept) 24.001758 24.968750 25.9357420
SexFemale   -3.889195 -2.321023 -0.7528506
attr(,"label")
[1] "Fixed effects:"

 Random Effects:
  Level: Subject 
                   lower     est.    upper
sd((Intercept)) 1.050716 1.595847 2.423802

 Within-group standard error:
   lower     est.    upper 
1.903438 2.220310 2.589932 
> fit.contrast(fm1, "Sex", c(1,0) )
              Estimate Std. Error  t-value    Pr(>|t|)
Sex c=( 1 0 ) 2.321023  0.7614192 3.048285 0.005375176
> 
> 
